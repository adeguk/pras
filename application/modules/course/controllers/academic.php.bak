<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Academic extends Admin_Controller {

    public function __construct() {
        parent::__construct();

        $this->auth->restrict('Course.Academic.View');

        $this->load->model(array('coursebank_model','degree_model','programme_model'));

        //Other required model
        $this->load->model('faculty/department_model');

        Template::set('toolbar_title', 'Manage Course Bank');
        Template::set_block('sub_nav', 'academic/_sub_nav');
    }

    public function index() {

        $courses = $this->coursebank_model->where('deleted', 0)->find_all();

        Template::set('courses', $courses);
        Template::render();
    }

    //to create: form display for new post
    public function create_course() {

        $this->auth->restrict('Course.Academic.Add', SITE_AREA.'/academic/course');

        if ($this->input->post('submit')) {
            if ($this->coursebank_model->save_course()) {
                // Log the activity
                log_activity($this->auth->user_id(), 'New Course created in Course Bank : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your Course was successfully created.', 'success');
                redirect(SITE_AREA .'/academic/course');
            }
        }
        $listDepartment = $this->department_model->department_list();
        Template::set('listDepartment',$listDepartment);

        Template::set('toolbar_title', 'Manage Course Bank');
        Template::set_view('academic/create_course');
        Template::render();
    }

    //to edit
    public function edit_course($id=null)  {

        $this->auth->restrict('Course.Academic.Manage', SITE_AREA.'/academic/course');

        if ($this->input->post('submit')) {
            if ($this->coursebank_model->save_course('update', $id)) {

                // Log the activity
                log_activity($this->auth->user_id(), 'Course with ID: '. $id . ' modified in Course Bank : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your course was successfully editted.', 'success');
                redirect(SITE_AREA .'/academic/course');
            }
        }
        $listDepartment = $this->load->Model('faculty/department_model')->department_list();
        Template::set('listDepartment',$listDepartment);

        Template::set('post', $this->coursebank_model->find($id));
        Template::set('toolbar_title', 'Manage Course Bank');
        Template::set_view('academic/edit_course');
        Template::render();
    }

    //to delete
    public function delete_course()  {

        $this->auth->restrict('Course.Academic.Delete', SITE_AREA.'/academic/course');

        if ($checked = $this->input->post('checked')) {
            foreach ($checked as $id) {
                $this->coursebank_model->delete($id);

                // Log the activity
                log_activity($this->auth->user_id(), 'Course with ID: '. $id . ' deleted from Course Bank : ' . $this->input->ip_address(), 'course');
            }
            Template::set_message('Your course was successfully deleted.', 'success');
        }
        else {
            Template::set_message('Your course was not successfully deleted.', 'error');
        }

        redirect(SITE_AREA .'/academic/course');
    }

    //Degree
    public function degree()  {

        $degrees = $this->degree_model->where('deleted', 0)->find_all();

        Template::set('degrees', $degrees);
        Template::set('toolbar_title', 'Manage Study Programme');
        Template::render();
    }

    //to create: form display for new degree
    public function create_degree() {

        $this->auth->restrict('Course.Academic.Add', SITE_AREA.'/academic/course/degree');

        if ($this->input->post('submit')) {
            if ($this->degree_model->save_degree()) {
                // Log the activity
                log_activity($this->auth->user_id(), 'Degree with ID: '. $id . ' created : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your Degree was successfully created.', 'success');
                redirect(SITE_AREA .'/academic/course/degree');
            }
        }

        Template::set('toolbar_title', 'Manage Study Programme');
        Template::set_view('academic/create_degree');
        Template::render();
    }

    //to edit
    public function edit_degree($id=null)  {

        $this->auth->restrict('Course.Academic.Manage', SITE_AREA.'/academic/course/degree');

        if ($this->input->post('submit')) {
            if ($this->degree_model->save_degree('update', $id)) {

                // Log the activity
                log_activity($this->auth->user_id(), 'Degree with ID: '. $id . ' modified : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your degree was successfully editted.', 'success');
                redirect(SITE_AREA .'/academic/course/degree');
            }
        }

        Template::set('post', $this->degree_model->find($id));
        Template::set('toolbar_title', 'Manage Study Programme');
        Template::set_view('academic/edit_degree');
        Template::render();
    }

    //to delete
    public function delete_degree()  {

        $this->auth->restrict('Course.Academic.Delete', SITE_AREA.'/academic/course/degree');

        if ($checked = $this->input->post('checked')) {
            foreach ($checked as $id) {
                $this->degree_model->delete($id);

                // Log the activity
                log_activity($this->auth->user_id(), 'Degree with ID: '. $id . ' deleted : ' . $this->input->ip_address(), 'course');
            }
            Template::set_message('Your degree was successfully deleted.', 'success');
        }
        else {
            Template::set_message('Your degree was not successfully deleted.', 'error');
        }

        redirect(SITE_AREA .'/academic/course/degree');
    }

    //Programme
    public function programme()  {

        $programmes = $this->programme_model->where('deleted', 0)->find_all();

        Template::set('programmes', $programmes);
        Template::set('toolbar_title', 'Manage Study Programme');
        Template::render();
    }

    //to create: form display for new programme
    public function create_programme() {

        $this->auth->restrict('Course.Academic.Add', SITE_AREA.'/academic/course/programme');

        if ($this->input->post('submit')) {
            if ($this->programme_model->save_programme()) {
                // Log the activity
                log_activity($this->auth->user_id(), 'New Programme created : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your programme was successfully created.', 'success');
                redirect(SITE_AREA .'/academic/course/programme');
            }
            else {
                Template::set_message('Your programme was not successfully created.', 'error');
                redirect(SITE_AREA .'/academic/course/programme');
            }
        }

        $listCourseBank = $this->coursebank_model->coursebank_list();
        $listDegree = $this->degree_model->degree_list();
        $listDepartment = $this->department_model->department_list();
        #$listStudyType = $this->studytype_model->studytype_list();

        Template::set('listCourseBank',$listCourseBank);
        Template::set('listDegree',$listDegree);
        Template::set('listDepartment',$listDepartment);
        #Template::set('listStudyType',$listStudyType);

        Template::set('toolbar_title', 'Manage Study Programme');
        Template::set_view('academic/create_programme');
        Template::render();
    }

    //to edit
    public function edit_programme($id=null)  {

        $this->auth->restrict('Course.Academic.Manage', SITE_AREA.'/academic/course/programme');

        if ($this->input->post('submit')) {
            if ($this->programme_model->save_programme('update', $id)) {

                // Log the activity
                log_activity($this->auth->user_id(), 'Programme with ID: '. $id . ' modified : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your programme was successfully editted.', 'success');
                redirect(SITE_AREA .'/academic/course/programme');
            }
        }

        $listCourseBank = $this->coursebank_model->coursebank_list();
        $listDegree = $this->degree_model->degree_list();
        $listDepartment = $this->department_model->department_list();
        #$listStudyType = $this->studytype_model->studytype_list();

        Template::set('listCourseBank',$listCourseBank);
        Template::set('listDegree',$listDegree);
        Template::set('listDepartment',$listDepartment);
        #Template::set('listStudyType',$listStudyType);

        Template::set('post', $this->programme_model->find($id));
        Template::set('toolbar_title', 'Manage Study Programme');
        Template::set_view('academic/edit_programme');
        Template::render();
    }

    //to delete
    public function delete_programme()  {

        $this->auth->restrict('Course.Academic.Delete', SITE_AREA.'/academic/course/programme');

        if ($checked = $this->input->post('checked')) {
            foreach ($checked as $id) {
                $this->programme_model->delete($id);

                // Log the activity
                log_activity($this->auth->user_id(), 'Programme with ID: '. $id . ' deleted : ' . $this->input->ip_address(), 'course');
            }
            Template::set_message('Your programme was successfully deleted.', 'success');
        }
        else {
            Template::set_message('Your programme was not successfully deleted.', 'error');
        }

        redirect(SITE_AREA .'/academic/course/programme');
    }

    //Programme
    /*public function studytype()  {

        $studytypes = $this->studytype_model->where('deleted', 0)->find_all();

        Template::set('studytypes', $studytypes);
        Template::set('toolbar_title', 'Manage Study Programme');
        Template::render();
    }

    //to create: form display for new studytype
    public function create_studytype() {

        $this->auth->restrict('Course.Academic.Add', SITE_AREA.'/academic/course/studytype');

        if ($this->input->post('submit')) {
            if ($this->studytype_model->save_studytype()) {
                // Log the activity
                log_activity($this->auth->user_id(), 'New study type created : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your study type was successfully created.', 'success');
                redirect(SITE_AREA .'/academic/course/studytype');
            }
        }

        Template::set('toolbar_title', 'Manage Study Programme');
        Template::set_view('academic/create_studytype');
        Template::render();
    }

    //to edit
    public function edit_studytype($id=null)  {

        $this->auth->restrict('Course.Academic.Manage', SITE_AREA.'/academic/course/studytype');

        if ($this->input->post('submit')) {
            if ($this->studytype_model->save_studytype('update', $id)) {

                // Log the activity
                log_activity($this->auth->user_id(), 'Study Type with ID: '. $id . ' modified : ' . $this->input->ip_address(), 'course');
                Template::set_message('Your study type was successfully editted.', 'success');
                redirect(SITE_AREA .'/academic/course/studytype');
            }
        }

        Template::set('post', $this->studytype_model->find($id));
        Template::set('toolbar_title', 'Manage Study Programme');
        Template::set_view('academic/edit_studytype');
        Template::render();
    }

    //to delete
    public function delete_studytype()  {

        $this->auth->restrict('Course.Academic.Delete', SITE_AREA.'/academic/course/studytype');

        if ($checked = $this->input->post('checked')) {
            foreach ($checked as $id) {
                $this->studytype_model->delete($id);

                // Log the activity
                log_activity($this->auth->user_id(), 'Study type with ID: '. $id . ' deleted : ' . $this->input->ip_address(), 'course');
            }
            Template::set_message('Your study type was successfully deleted.', 'success');
        }
        else {
            Template::set_message('Your study type was not successfully deleted.', 'error');
        }

        redirect(SITE_AREA .'/academic/course/studytype');
    }*/
}
